@page "/Support"

@using System.Text
@using System.Text.Json
@using Azure
@using Blazorise.Charts
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims
@using WebApp.Dto
@using WebApp.Models
@using System.Net.Http
@using Microsoft.AspNetCore.Components.Authorization
@using System.Net.Http.Json
@using System.Threading.Tasks

@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject SweetAlertService Swal
@inject IRecaptchaService RecaptchaService
@inject HttpClient HttpClient

@rendermode InteractiveServer
<nav class="navbar navbar-expand-lg navbar-dark bg-dark shadow-sm px-3">
    <div class="container-fluid">
        <!-- Logo -->
        <a class="navbar-brand text-white d-flex align-items-center fw-bold" href="#">
            <img src="images/security.png" style="width: 40px; height: auto;" alt="Security">
            <span class="ms-2">Bertly</span>
        </a>


        <!-- Ikony -->
        <div class="d-flex align-items-center ms-3">
            <button class="btn btn-outline-light btn-sm rounded-circle me-3 icon-btn"><i class="bi bi-bell"></i></button>
            <button class="btn btn-outline-light btn-sm rounded-circle me-3 icon-btn"><i class="bi bi-person"></i></button>
            <button class="btn btn-outline-light btn-sm rounded-circle me-3 icon-btn"><i class="bi bi-question-circle"></i></button>
            <button class="btn btn-outline-light btn-sm rounded-circle icon-btn"><i class="bi bi-gear"></i></button>
        </div>
    </div>
</nav>



<div class="container-fluid d-flex p-0 h-100 min-vh-100">
    <nav class="d-flex flex-column bg-dark border-end shadow-sm sidebar ">
    <!-- Logo a název -->
        <div class="navbar-brand text-white text-center py-3 border-bottom">
            Management
        </div>

        <ul class="navbar-nav flex-column">
            <li class="nav-item">
                <a class="nav-link d-flex align-items-center text-white" href="/HomeManager">
                    <i class="bi bi-speedometer2 me-2"></i> Dashboard
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link d-flex align-items-center text-white" href="/PasswordsPage">
                    <i class="bi bi-lock me-2"></i> Passwords
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link d-flex align-items-center text-white" href="/SecurityTips">
                    <i class="bi bi-book me-2"></i> Security Tips
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link d-flex align-items-center text-white" href="/Validator">
                    <i class="bi bi-patch-check me-2"></i> Validator
                </a>
            </li>

            <!-- Oddělení Settings -->
            <div class="sidebar-divider"></div>
            <p class="text-white ps-3 fw-bold text-white">Settings</p>

            <li class="nav-item">
                <a class="nav-link d-flex align-items-center" href="/Account">
                    <i class="bi bi-person-circle me-2 text-white"></i> Account
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link d-flex align-items-center" href="/Support">
                    <i class="bi bi-chat-right me-2 text-white"></i> Support
                </a>
            </li>
            <li class="nav-item mt-auto">
                <a class="nav-link logout-link d-flex align-items-center" href="/logout">
                    <i class="bi bi-box-arrow-left me-2"></i> Log Out
                </a>
            </li>
        </ul>
    </nav>

    <main class="flex-grow-1 bg-dark">
        <div class="container p-4">
                <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">We're here to help!</h5>
                    <p class="card-text">If you need assistance or have any questions, please fill out the form below and our support team will get back to you as soon as possible.</p>
                    <form>
                        <div class="mb-3">
                            <label for="name" class="form-label">Name</label>
                            <input type="text" class="form-control" id="name" placeholder="Your Name" />
                        </div>
                        <div class="mb-3">
                            <label for="email" class="form-label">Email address</label>
                            <input type="email" class="form-control" id="email" placeholder="Your Email" />
                        </div>
                        <div class="mb-3">
                            <label for="subject" class="form-label">Subject</label>
                            <input type="text" class="form-control" id="subject" placeholder="Subject" />
                        </div>
                        <div class="mb-3">
                            <label for="message" class="form-label">Message</label>
                            <textarea class="form-control" id="message" rows="4" placeholder="Your message"></textarea>
                        </div>
                        <GoogleRecaptcha SuccessCallBack="SuccessCallBack"
                            TimeOutCallBack="TimeOutCallBack"
                            ServerValidationErrorCallBack="ServerSideValidationError"
                            ServerSideValidationHandler="ServerSideValidationHandler"
                            Version="CaptchaConfiguration.Version.V2"
                            Theme="CaptchaConfiguration.Theme.Light"
                            Language="CaptchaLanguages.English">
                        </GoogleRecaptcha>
                        <button type="submit" class="btn btn-primary" disabled="@Disabled">Send Message</button>
                    </form>
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger mt-3" role="alert">
                            @errorMessage
                        </div>
                    }
                </div>
            </div>
        </div>
    </main>
</div>

@code {
    private bool Disabled { get; set; } = true;
    private string captchaResponse { get; set; }
    private string errorMessage { get; set; }

    void SuccessCallBack(CaptchaSuccessEventArgs e)
    {
        Disabled = false; // Disable attribute of button becomes false for example
        captchaResponse = e.CaptchaResponse; // Result received from reCaptcha
        StateHasChanged();
    }

    void TimeOutCallBack(CaptchaTimeOutEventArgs e)
    {
        Disabled = true; // Button becomes disabled again
        Console.WriteLine($"Captcha Time Out with message {e.ErrorMessage}");
        errorMessage = $"Captcha Timeout: {e.ErrorMessage}";
    }

    private void ServerSideValidationError(CaptchaServerSideValidationErrorEventArgs e)
    {
        errorMessage = $"Captcha server side validation error: {e.ErrorMessage}";
    }

    private async Task<ServerSideCaptchaValidationResultModel> ServerSideValidationHandler(ServerSideCaptchaValidationRequestModel requestModel)
    {
        var secretKey = "6Ld66EUqAAAAAAdvbb3ay_zUbVe3IJLsAPktX8sA";
        var apiResult = await HttpClient.GetFromJsonAsync<GoogleCaptchaCheckResponseResult>($"https://www.google.com/recaptcha/api/siteverify?secret=6Ld66EUqAAAAAAdvbb3ay_zUbVe3IJLsAPktX8sA&response={requestModel.CaptchaResponse}");
        return new ServerSideCaptchaValidationResultModel(apiResult.Success, string.Join("\n",apiResult.ErrorCodes ?? new List<string>(){"No Error"}));
    }

    public class GoogleCaptchaCheckResponseResult
    {
        public bool Success { get; set; }
        public List<string> ErrorCodes { get; set; }
    }
}
