@page "/CreateAccount"

@using System.Net.Http
@using System.Net.Http.Json
@using WebApp.Models

@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager

<PageTitle>Create Account</PageTitle>

<div class="d-flex vh-100">
    <div class="d-flex justify-content-center align-items-center vh-100 bg-dark text-white" style="width: 50%;">
        <EditForm Model="@user" OnValidSubmit="RegisterAccount" class="text-center w-50" FormName="CreateAccount">
            <DataAnnotationsValidator />

            <h1 class="mb-5">Create an Account</h1>

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger" role="alert">
                    <h4 class="alert-heading">Error!</h4>
                    <p>@errorMessage</p>
                    <hr>
                    <p class="mb-0">Please try again.</p>
                </div>
            }

            <div class="form-group mb-3">
                <label for="name" class="mb-3">Name</label>
                <InputText id="name" @bind-Value="user.Name" class="form-control w-75 mx-auto text-center" placeholder="Username" />
                <ValidationMessage For="@(() => user.Name)" />
            </div>

            <div class="form-group mb-3">
                <label for="email" class="mb-3">Email</label>
                <InputText id="email" @bind-Value="user.Email" class="form-control w-75 mx-auto text-center" placeholder="Email"/>
                <ValidationMessage For="@(() => user.Email)" />
            </div>

            <div class="form-group mb-3">
                <label for="password" class="mb-3">Password</label>
                <InputText id="password" @bind-Value="user.Password" type="password" class="form-control w-75 mx-auto text-center" placeholder="Password"/>
                <ValidationMessage For="@(() => user.Password)" />
            </div> 

            <button type="submit" class="btn btn-primary mt-4">Create Account</button>
        </EditForm>
        </div>
            <div class="d-flex justify-content-center align-items-center bg-dark" style="width: 50%;">
                <img src="/images/z13.jpg" alt="Logo" class="img-fluid" style="height: 100vh; width: auto; object-fit: cover; ">
            </div>
</div>

@code {
    [SupplyParameterFromForm]
    private AccountDetails user { get; set; } = new AccountDetails();

    private string successMessage { get; set; } = string.Empty;
    private string errorMessage { get; set; } = string.Empty;

    private async Task RegisterAccount()
    {

        var httpClient = HttpClientFactory.CreateClient("ApiClient");
        var response = await httpClient.PostAsJsonAsync("api/AccountDetails", user);

        if (response.IsSuccessStatusCode)
        {
            await Task.Delay(3000);
            NavigationManager.NavigateTo("/HomeManager");
        }
        else
        {
            successMessage = string.Empty;
            errorMessage = $"Error: {response.ReasonPhrase}";
        }
    }
}
