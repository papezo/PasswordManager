@page "/Account"

@rendermode InteractiveServer

@using System.Text
@using System.Text.Json
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims
@using WebApp.Dto
@using WebApp.Models
@using System.Net.Http
@using Microsoft.AspNetCore.Components.Authorization
@using System.Net.Http.Json
@using WebApp.Security

@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject SweetAlertService Swal
@inject IConfiguration Configuration

<PageTitle>Account</PageTitle>



<div class="container-fluid d-flex @(isDarkMode ? "dark-mode" : "light-mode") min-vh-100">

    <!-- Sidebar -->
    <nav class="sidebar-nav d-flex flex-column" style="width: 400px; height: 100vh;">
      <!-- Logo -->
      <div class="text-center mb-5">
        @if(isDarkMode == false)
        {
        <img src="images/plart3.png" alt="Security" width="250" class="">
        } else {
        <img src="images/plart4.png" alt="Security" width="250" class="">
        }
      </div>

      <!-- User Profile -->
      <div class="user-profile  p-4">
      <div class="d-flex align-items-center gap-3 p-3 rounded-4 profile-card">
        <img src="images/user.png" alt="User Avatar" class="rounded-circle border shadow-sm" width="45">
        <div class="flex-grow-1">
        <h6 class="mb-0 fw-semibold ">@user.FullName</h6>
        <small class="text-primary">Admin</small>
        </div>
      </div>
      </div>

      <!-- Main Navigation -->
      <div class="main-nav mb-4 p-4">
      <ul class="nav flex-column gap-2">
      <h6 class="text-muted text-uppercase ms-2 mb-3 fw-semibold">
        <i class="bi bi-list me-2"></i> Menu
      </h6>
        <li class="nav-item">
        <a class="nav-link d-flex align-items-center p-3 rounded-3" href="/HomeManager">
          <i class="bi bi-speedometer2 me-3 text-primary"></i> Dashboard
        </a>
        </li>
        <li class="nav-item">
        <a class="nav-link d-flex align-items-center p-3 rounded-3" href="/PasswordsPage">
          <i class="bi bi-lock me-3 text-primary"></i> Passwords
        </a>
        </li>
        <li class="nav-item">
        <a class="nav-link d-flex align-items-center p-3 rounded-3" href="/SecurityTips">
          <i class="bi bi-shield-check me-3 text-primary"></i> Security Tips
        </a>
        </li>
        <li class="nav-item">
        <a class="nav-link d-flex align-items-center p-3 rounded-3" href="/Validator">
          <i class="bi bi-patch-check me-3 text-primary"></i> Validator
        </a>
        </li>
      </ul>
      </div>


      <h6 class="text-muted text-uppercase ms-4 fw-semibold">
        <i class="bi bi-shield-lock me-2"></i> Security & Passwords
      </h6>
      <ul class="nav flex-column gap-2 p-4">
        <li class="nav-item">
          <a class="nav-link d-flex align-items-center p-3 rounded-3" href="/PasswordsPage">
            <i class="bi bi-key me-3 text-primary"></i> Password Generator
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link d-flex align-items-center p-3 rounded-3" href="/SecurityTips">
            <i class="bi bi-exclamation-triangle me-3 text-warning"></i> Breach Checker
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link d-flex align-items-center p-3 rounded-3" href="/AutofillSetup">
            <i class="bi bi-browser-chrome me-3 text-primary"></i> Autofill Setup
          </a>
        </li>
      </ul>


      <!-- Bottom Navigation -->
      <div class="bottom-nav mt-auto p-4">
      <h6 class="text-muted text-uppercase mb-3 ms-2 fw-semibold">Settings</h6>
      <ul class="nav flex-column gap-2">
        <li class="nav-item">
        <a class="nav-link d-flex align-items-center p-3 rounded-3" href="/Account">
          <i class="bi bi-person-circle me-3 text-primary"></i> Account
        </a>
        </li>
        <li class="nav-item">
        <a class="nav-link d-flex align-items-center p-3 rounded-3" href="/Support">
          <i class="bi bi-chat-right me-3 text-primary"></i> Support
        </a>
        </li>
          <li class="nav-item">
            <a class="nav-link d-flex align-items-center p-3 rounded-3 logout-link" href="/logout">
              <i class="bi bi-box-arrow-left me-3"></i> Log Out
            </a>
          </li>
        
      </ul>
      </div>
    </nav>


    <div class="top-navbar d-flex flex-column flex-grow-1 min-vh-100">
      <div class="top-navbar d-flex justify-content-between align-items-center px-4 py-3 b2">
        <!-- Left Section -->
        <div class="d-flex align-items-center gap-4">
          <!-- Search Bar with Dropdown -->
          <div class="search-container">
            <div class="search-wrapper">
              <i class="bi bi-search search-icon"></i>
              <input type="text" class="search-input" placeholder="Search passwords, websites, or notes...">
              <button class="search-filter-btn">

              </button>
            </div>
          </div>
        </div>

        <!-- Right Section -->
        <div class="d-flex align-items-center gap-3">
          <!-- Add New Password Button -->
          <button class="btn btn-primary d-flex align-items-center gap-2 add-password-btn">
            <i class="bi bi-plus-lg"></i>
            <span>New Password</span>
          </button>

          <!-- Notifications -->
          <div class="notification-wrapper">
            <button class="notification-btn" data-bs-toggle="dropdown">
              <i class="bi bi-bell fs-5"></i>
              @if(notifications > 0)
              {
                <span class="notification-badge">@notifications</span>
              }
            </button>
            <div class="dropdown-menu notification-dropdown">
              <h6 class="dropdown-header">Notifications</h6>
              <div class="notification-list">
                <a href="#" class="dropdown-item notification-item">
                  <i class="bi bi-shield-exclamation text-warning"></i>
                  <div class="notification-content">
                    <p class="notification-title">Weak Passwords Detected</p>
                    <p class="notification-desc">@weakPasswords.Count passwords need attention</p>
                  </div>
                </a>
                <a href="#" class="dropdown-item notification-item">
                  <i class="bi bi-clock-history text-info"></i>
                  <div class="notification-content">
                    <p class="notification-title">Password Update Required</p>
                    <p class="notification-desc">@outDatedPasswords.Count passwords are outdated</p>
                  </div>
                </a>
              </div>
            </div>
          </div>

          <!-- Theme Toggle -->
          <button class="theme-toggle-btn" @onclick="ToggleTheme">
            <i class="bi @(isDarkMode ? "bi-sun" : "bi-moon-stars") fs-5"></i>
          </button>

          <!-- Help -->
          <button class="help-btn" title="Help & Support">
            <i class="bi bi-question-circle fs-5"></i>
          </button>
        </div>
      </div>

      

    <!-- Tabs -->
    <div class="container py-3">
      <ul class="nav nav-tabs" id="accountTab" role="tablist">
        <li class="nav-item" role="presentation">
          <button class="nav-link active" id="personal-tab" data-bs-toggle="tab" data-bs-target="#personal"
                  type="button" role="tab" aria-controls="personal" aria-selected="true">Personal Info</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="security-tab" data-bs-toggle="tab" data-bs-target="#security"
                  type="button" role="tab" aria-controls="security" aria-selected="false">Security</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="notifications-tab" data-bs-toggle="tab" data-bs-target="#notifications"
                  type="button" role="tab" aria-controls="notifications" aria-selected="false">Notifications</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="billing-tab" data-bs-toggle="tab" data-bs-target="#billing"
                  type="button" role="tab" aria-controls="billing" aria-selected="false">Billing</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="support-tab" data-bs-toggle="tab" data-bs-target="#support"
                  type="button" role="tab" aria-controls="support" aria-selected="false">Support</button>
        </li>
      </ul>

      <div class="tab-content" id="accountTabContent">
        <!-- Personal Info Tab -->
        <div class="tab-pane fade show active" id="personal" role="tabpanel" aria-labelledby="personal-tab">
    <div class="row g-4">
        <!-- Personal Information Card -->
        <div class="col-md-8">
            <div class="notification-card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0"><i class="bi bi-person me-2"></i>Personal Information</h5>
                    <button class="btn btn-outline-primary btn-sm" @onclick="EditPersonalInfo">
                        <i class="bi bi-pencil me-2"></i>@(WantToEdit ? "Save" : "Edit")
                    </button>
                </div>
                <div class="card-body">
                    <EditForm Model="@user" OnValidSubmit="SaveUserEdit">
                        <!-- Basic Information -->
                        <div class="form-section mb-4">
                            <h6 class="section-title text-light">Basic Information</h6>
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="text-light">Full Name</label>
                                        <InputText class="form-control " @bind-Value="user.Username" placeholder="Full Name" disabled="@(!WantToEdit)" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="text-light">Email Address</label>
                                        <InputText type="email" class="form-control " @bind-Value="user.Email" placeholder="Email Address" disabled="@(!WantToEdit)" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="text-light">Date of Birth</label>
                                        <InputDate class="form-control" @bind-Value="user.DateOfBirth" disabled="@(!WantToEdit)" />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Contact Information -->
                        <div class="form-section mb-4">
                            <h6 class="section-title text-light">Contact Information</h6>
                            <div class="row g-3">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label class="text-light">Address</label>
                                        <InputText class="form-control" @bind-Value="user.Address" placeholder="Your Address" disabled="@(!WantToEdit)" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="text-light">Postal Code</label>
                                        <InputText class="form-control " @bind-Value="user.PostalCode" placeholder="Postal Code" disabled="@(!WantToEdit)" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="text-light">City</label>
                                        <InputText class="form-control " @bind-Value="user.City" placeholder="City" disabled="@(!WantToEdit)" />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Account Details -->
                        <div class="form-section">
                            <h6 class="section-title text-light">Account Details</h6>
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="text-light">Customer ID</label>
                                        <input class="form-control " value="@user.CustomerId" disabled />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="text-light">Account ID</label>
                                        <input class="form-control " value="@user.AccountId" disabled />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>

        <!-- Account Summary Card -->
        <div class="col-md-4">
            <div class="notification-card h-100">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-diagram-3 me-2"></i>Account Summary</h5>
                </div>
                <div class="card-body">
                    <div class="summary-item mb-4">
                        <div class="summary-icon">
                            <i class="bi bi-person-check"></i>
                        </div>
                        <div class="summary-info w-75">
                            <h6 class="text-light mb-3">Profile Completion</h6>
                            <div class="progress-custom mt-2">
                                <div class="progress-bar" style="width: @user.AccountPoints%;"></div>
                            </div>
                        </div>
                    </div>
                    <div class="summary-item mb-4">
                        <div class="summary-icon">
                            <i class="bi bi-clock-history"></i>
                        </div>
                        <div class="summary-info">
                            <h6 class="text-light">Account Created</h6>
                            <p class="text-secondary mt-2">@user.CreatedAt.ToString("d")</p>
                        </div>
                    </div>
                      <div class="summary-item mb-4">
                          <div class="summary-icon">
                              <i class="bi bi-shield-lock"></i>
                          </div>
                          <div class="summary-info">
                              <h6 class="text-light">Two-Factor Authentication</h6>
                              <span class="badge category-badge mt-2 mb-3 @(user.TwoFactorEnabled ? "bg-success" : "bg-danger")">
                                  @(user.TwoFactorEnabled ? "Enabled" : "Disabled")
                              </span>
                          </div>
                      </div>
                    <div class="summary-item">
                        <div class="summary-icon">
                            <i class="bi bi-shield-check"></i>
                        </div>
                        <div class="summary-info">
                            <h6 class="text-light">Security Score</h6>
                            <div class="d-flex align-items-center">
                                <div class="progress-custom flex-grow-1 me-2 mt-2">
                                    <div class="progress-bar" style="width: @(user.AccountScore)%;"></div>
                                    <p>@user.AccountScore/100</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Password Change Card -->
        <div class="col-12">
          <div class="notification-card">
              <div class="card-header">
                  <h5 class="mb-0"><i class="bi bi-key me-2"></i>Change Password</h5>
              </div>
              <div class="card-body">
                  <EditForm Model="@userPassword" OnValidSubmit="ChangePassword" FormName="ChangePassword">
                      <div class="row justify-content-center">
                          <div class="col-md-6">
                              <div class="form-group mb-4 d-flex align-items-center justify-content-center">
                                  <label class="text-light text-center mb-3 fw-bold">Old Password</label>
                                  <div class="input-group w-50">
                                      <span class="input-group-text"><i class="bi bi-lock-fill"></i></span>
                                      <InputText type="password" class="form-control" @bind-Value="oldPassword" placeholder="Enter old password" />
                                  </div>
                              </div>
                              <div class="form-group mb-4 d-flex align-items-center justify-content-center">
                                  <label class="text-light text-center mb-3 fw-bold">New Password</label>
                                  <div class="input-group w-50">
                                      <span class="input-group-text"><i class="bi bi-lock-fill"></i></span>
                                      <InputText type="password" class="form-control" @bind-Value="newPassword" placeholder="Enter new password" />
                                  </div>
                              </div>
                              <div class="form-group d-flex align-items-center mt-5">
                                  <button type="submit" class="btn btn-primary w-50">Change Password</button>
                              </div>
                          </div>
                      </div>
                  </EditForm>
              </div>
          </div>
      </div>
    </div>
</div>

        <!-- SECURITY TAB -->
        <div class="tab-pane fade" id="security" role="tabpanel" aria-labelledby="security-tab">
          <div class="row g-4">
            <!-- 2FA Status Card -->
            <div class="col-md-6">
              <div class="security-card status-card">
                <div class="card-header">
                  <h5>2FA Status</h5>
                </div>
                <div class="card-body text-center">
                    @if(user.TwoFactorEnabled)
                    {
                      <div class="status-icon mb-4">
                        <i class="bi bi-check-circle text-success fs-1"></i>
                      </div>
                      <h3 class="text-success fw-bold mb-3">Enabled</h3>
                      <p class="text-secondary mb-5">
                        Your account is protected with an extra layer of security.  
                        You will need to enter a verification code when signing in.
                      </p>
                    }
                    else
                    {
                      <div class="status-icon mb-4">
                        <i class="bi bi-x-circle text-danger fs-1"></i>
                      </div>
                      <h3 class="text-danger fw-bold mb-3">Disabled</h3>
                      <p class="text-secondary mb-5">
                        Your account is at risk. Without 2FA, anyone with your password can log in.  
                        Enable it to improve your security.
                      </p>
                    }
                    <div class="action-buttons">
                      @if(!user.TwoFactorEnabled)
                      {
                        <a href="/2FA" class="btn btn-success btn-lg w-50 mb-2">
                          <i class="bi bi-shield-plus me-2"></i>Enable 2FA
                        </a>
                      }
                      else
                      {
                        <button class="btn btn-danger btn-lg w-100 mb-2" data-bs-toggle="modal" data-bs-target="#disable2FA">
                          <i class="bi bi-shield-minus me-2"></i>Disable 2FA
                        </button>
                      }
                  </div>
                </div>
              </div>
            </div>

            <!-- Security Actions Card -->
            <div class="col-md-6">
              <div class="security-card actions-card">
                <div class="card-header">
                  <h5>Quick Actions</h5>
                </div>
                <div class="card-body">
                  <div class="action-item">
                    <i class="bi bi-clock-history"></i>
                    <div class="action-content">
                      <h6>View Activity</h6>
                      <p>Check recent login attempts and security events</p>
                      <button class="btn btn-outline-info w-100">View History</button>
                    </div>
                  </div>
                  <div class="action-item">
                    <i class="bi bi-laptop"></i>
                    <div class="action-content">
                      <h6>Active Sessions</h6>
                      <p>Manage devices logged into your account</p>
                      <button class="btn btn-outline-warning w-100">Manage Devices</button>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <!-- Security Settings Card -->
            <div class="col-md-12">
              <div class="security-card settings-card">
                <div class="card-header">
                  <h5>Security Settings</h5>
                </div>
                <div class="card-body">
                  <div class="row g-4">
                    <div class="col-md-4">
                      <div class="setting-item">
                        <i class="bi bi-key"></i>
                        <h6>Backup Codes</h6>
                        <p>Generate backup codes for account recovery</p>
                        <button class="btn btn-outline-secondary w-100">Generate Codes</button>
                      </div>
                    </div>
                    <div class="col-md-4">
                      <div class="setting-item">
                        <i class="bi bi-bell"></i>
                        <h6>Security Alerts</h6>
                        <p>Manage your security notification preferences</p>
                        <button class="btn btn-outline-primary w-100">Configure</button>
                      </div>
                    </div>
                    <div class="col-md-4">
                      <div class="setting-item">
                        <i class="bi bi-shield-lock"></i>
                        <h6>Password Policy</h6>
                        <p>Review and update password requirements</p>
                        <button class="btn btn-outline-success w-100">Review</button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Opravený modal s ID disable2FA -->
          <div class="modal fade" id="disable2FA" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title">Disable 2FA</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                  <p>Are you sure you want to disable Two-Factor Authentication?</p>
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                  <button type="button" class="btn btn-danger">Disable</button>
                </div>
              </div>
            </div>
          </div>
          <!-- Konec modalu -->
        </div>
 <div class="tab-pane fade" id="notifications" role="tabpanel" aria-labelledby="notifications-tab">
    <div class="row g-4">
        <!-- Email Notifications Card -->
        <div class="col-md-6">
           <div class="notification-card h-100 improved-notification-card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">
            <i class="bi bi-envelope me-2"></i>Email Notifications
        </h5>
        <div class="form-check form-switch">
            <input class="form-check-input" type="checkbox" id="emailNotificationSwitch" checked>
        </div>
    </div>
    <div class="card-body">
        <div class="notification-setting">
            
            <!-- Security Alerts Dropdown -->
            <div class="dropdown mb-3">
                <button class="btn btn-outline-light w-100 d-flex justify-content-between align-items-center" 
                        type="button" data-bs-toggle="collapse" data-bs-target="#securityAlerts">
                    <span><i class="bi bi-shield-lock me-2 text-primary"></i>Security Alerts</span>
                    <i class="bi bi-chevron-down"></i>
                </button>
                <div class="collapse mt-2" id="securityAlerts">
                    <small class="text-secondary d-block mb-2">Get notified about security-related events</small>
                    <div class="form-check form-switch mb-2">
                        <input class="form-check-input" type="checkbox" checked>
                        <label class="form-check-label text-secondary ms-2">Login Attempts</label>
                    </div>
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox" checked>
                        <label class="form-check-label text-secondary ms-2">Device Changes</label>
                    </div>
                </div>
            </div>

            <!-- Account Updates Dropdown -->
            <div class="dropdown mb-3">
                <button class="btn btn-outline-light w-100 d-flex justify-content-between align-items-center" 
                        type="button" data-bs-toggle="collapse" data-bs-target="#accountUpdates">
                    <span><i class="bi bi-person-badge me-2 text-primary"></i>Account Updates</span>
                    <i class="bi bi-chevron-down"></i>
                </button>
                <div class="collapse mt-2" id="accountUpdates">
                    <small class="text-secondary d-block mb-2">Notifications about account changes</small>
                    <div class="form-check form-switch mb-2">
                        <input class="form-check-input" type="checkbox" checked>
                        <label class="form-check-label text-secondary ms-2">Profile Changes</label>
                    </div>
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox" checked>
                        <label class="form-check-label text-secondary ms-2">Password Updates</label>
                    </div>
                </div>
            </div>
        </div>
    </div>
            </div>
        </div>

        <!-- Alert Settings Card -->
        <div class="col-md-6">
            <div class="notification-card h-100 improved-notification-card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-bell me-2"></i>Alert Settings</h5>
                </div>
                <div class="card-body">
                    <div class="setting-group mb-4">
                        <label class="form-label text-light">Notification Frequency</label>
                        <select class="form-select dark-select">
                            <option value="instant">Real-time</option>
                            <option value="hourly">Hourly Digest</option>
                            <option value="daily">Daily Summary</option>
                            <option value="weekly">Weekly Recap</option>
                        </select>
                    </div>
                    <div class="setting-group mb-4">
                        <label class="form-label text-light">Priority Level</label>
                        <select class="form-select dark-select">
                            <option value="all">All Notifications</option>
                            <option value="high">High Priority Only</option>
                            <option value="medium">Medium & High</option>
                            <option value="none">None</option>
                        </select>
                    </div>
                    <div class="setting-group">
                        <label class="form-label text-light">Quiet Hours</label>
                        <div class="row g-2">
                            <div class="col-6">
                                <label class="text-secondary small">From</label>
                                <input type="time" class="form-control dark-input" value="22:00">
                            </div>
                            <div class="col-6">
                                <label class="text-secondary small">To</label>
                                <input type="time" class="form-control dark-input" value="07:00">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Notification Channels -->
        <div class="col-12">
            <div class="notification-card improved-notification-card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-broadcast me-2"></i>Notification Channels</h5>
                </div>
                <div class="card-body">
                    <div class="row g-4">
                        <div class="col-md-3">
                            <div class="channel-card">
                                <i class="bi bi-envelope-fill channel-icon"></i>
                                <h6 class="text-light mt-2">Email</h6>
                                <p class="text-secondary">Primary inbox notifications</p>
                                <button class="btn btn-outline-primary btn-sm w-100">Configure</button>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="channel-card">
                                <i class="bi bi-phone-fill channel-icon"></i>
                                <h6 class="text-light mt-2">Mobile Push</h6>
                                <p class="text-secondary">Send notifications to your Mobile</p>
                                <button class="btn btn-outline-primary btn-sm w-100">Configure</button>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="channel-card">
                                <i class="bi bi-browser-chrome channel-icon"></i>
                                <h6 class="text-light mt-2">Browser</h6>
                                <p class="text-secondary">On-screen alerts</p>
                                <button class="btn btn-outline-primary btn-sm w-100">Configure</button>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="channel-card">
                                <i class="bi bi-chat-dots-fill channel-icon"></i>
                                <h6 class="text-light mt-2">SMS</h6>
                                <p class="text-secondary">Get SMS notifications</p>
                                <button class="btn btn-outline-primary btn-sm w-100">Configure</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
        <!-- BILLING TAB -->
 <div class="tab-pane fade" id="billing" role="tabpanel" aria-labelledby="billing-tab">
    <div class="row g-4">
        <!-- Current Plan Card -->
        <div class="col-md-6">
            <div class="notification-card h-100">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-star me-2"></i>Current Plan</h5>
                </div>
                <div class="card-body">
                    <div class="plan-details">
                        <div class="plan-badge mb-3">
                            <span class="badge bg-primary">Premium</span>
                            <span class="badge bg-success ms-2">Active</span>
                        </div>
                        <h3 class="text-light mb-3">$9.99/month</h3>
                        <div class="features-list">
                            <div class="feature-item">
                                <i class="bi bi-check-circle-fill text-success"></i>
                                <span class="text-secondary">Unlimited passwords</span>
                            </div>
                            <div class="feature-item">
                                <i class="bi bi-check-circle-fill text-success"></i>
                                <span class="text-secondary">Advanced security</span>
                            </div>
                            <div class="feature-item">
                                <i class="bi bi-check-circle-fill text-success"></i>
                                <span class="text-secondary">Priority support</span>
                            </div>
                        </div>
                        <button class="btn btn-outline-primary w-100 mt-4">Upgrade Plan</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Payment Methods Card -->
        <div class="col-md-6">
            <div class="notification-card h-100">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0"><i class="bi bi-credit-card me-2"></i>Payment Methods</h5>
                    <button class="btn btn-outline-primary btn-sm">Add New</button>
                </div>
                <div class="card-body">
                    <div class="payment-method-item">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <div class="d-flex align-items-center">
                                <i class="bi bi-credit-card-2-front fs-4 text-primary me-3"></i>
                                <div>
                                    <h6 class="text-light mb-0">•••• •••• •••• 4242</h6>
                                    <small class="text-secondary">Expires 12/24</small>
                                </div>
                            </div>
                            <div class="badge bg-success">Default</div>
                        </div>
                    </div>
                    <div class="payment-method-item">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="d-flex align-items-center">
                                <i class="bi bi-paypal fs-4 text-primary me-3"></i>
                                <div>
                                    <h6 class="text-light mb-0">PayPal</h6>
                                    <small class="text-secondary">Connected</small>
                                </div>
                            </div>
                            <button class="btn btn-outline-danger btn-sm">Remove</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Billing History Card -->
        <div class="col-12">
            <div class="notification-card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-clock-history me-2"></i>Billing History</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-dark table-hover">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Description</th>
                                    <th>Amount</th>
                                    <th>Status</th>
                                    <th>Invoice</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>Jan 01, 2024</td>
                                    <td>Premium Plan - Monthly</td>
                                    <td>$9.99</td>
                                    <td><span class="badge bg-success">Paid</span></td>
                                    <td><button class="btn btn-outline-primary btn-sm">Download</button></td>
                                </tr>
                                <tr>
                                    <td>Dec 01, 2023</td>
                                    <td>Premium Plan - Monthly</td>
                                    <td>$9.99</td>
                                    <td><span class="badge bg-success">Paid</span></td>
                                    <td><button class="btn btn-outline-primary btn-sm">Download</button></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- SUPPORT TAB -->
<div class="tab-pane fade" id="support" role="tabpanel" aria-labelledby="support-tab">
    <div class="row g-4">
        <!-- Quick Help Card -->
        <div class="col-md-6">
            <div class="notification-card h-100">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-question-circle me-2"></i>Quick Help</h5>
                </div>
                <div class="card-body">
                    <div class="help-items">
                        <div class="help-item">
                            <h6 class="text-light"><i class="bi bi-book me-2"></i>Documentation</h6>
                            <p class="text-secondary mb-3">Browse through our detailed documentation</p>
                            <button class="btn btn-outline-primary btn-sm w-100">View Docs</button>
                        </div>
                        <div class="help-item mt-4">
                            <h6 class="text-light"><i class="bi bi-play-circle me-2"></i>Video Tutorials</h6>
                            <p class="text-secondary mb-3">Watch our helpful video guides</p>
                            <button class="btn btn-outline-primary btn-sm w-100">Watch Videos</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Contact Support Card -->
        <div class="col-md-6">
            <div class="notification-card h-100">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-headset me-2"></i>Contact Support</h5>
                </div>
                <div class="card-body">
                    <form>
                        <div class="mb-3">
                            <label class="form-label text-light">Subject</label>
                            <select class="form-select dark-select">
                                <option>Technical Issue</option>
                                <option>Billing Question</option>
                                <option>Feature Request</option>
                                <option>Other</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label text-light">Message</label>
                            <textarea class="form-control dark-input" rows="4" placeholder="Describe your issue..."></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Send Message</button>
                    </form>
                </div>
            </div>
        </div>

        <!-- FAQs Card -->
        <div class="col-12">
            <div class="notification-card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-info-circle me-2"></i>Frequently Asked Questions</h5>
                </div>
                <div class="card-body">
                    <div class="accordion" id="faqAccordion">
                        <div class="accordion-item bg-dark">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed bg-dark text-light" type="button" data-bs-toggle="collapse" data-bs-target="#faq1">
                                    How do I reset my password?
                                </button>
                            </h2>
                            <div id="faq1" class="accordion-collapse collapse" data-bs-parent="#faqAccordion">
                                <div class="accordion-body text-secondary">
                                    Detailed instructions for password reset process...
                                </div>
                            </div>
                        </div>
                        <div class="accordion-item bg-dark">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed bg-dark text-light" type="button" data-bs-toggle="collapse" data-bs-target="#faq2">
                                    How secure is my data?
                                </button>
                            </h2>
                            <div id="faq2" class="accordion-collapse collapse" data-bs-parent="#faqAccordion">
                                <div class="accordion-body text-secondary">
                                    Information about our security measures...
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
      </div>
    </div>
  </div>
</div>





<style>

.dark-mode  .text-white{
  color: white !important;
}

.dark-mode .glass-card {
    background: #2B2B3D;
}

.dark-mode .sidebar-nav {
    background-color: #1E1E2F !important;
    
}


.dark-mode .sidebar-nav {
  background-color: #1E1E2F !important;
  border-right: 1px solid #444 !important;
}

.dark-mode .nav-link {
  border: 1px solid #444;

  color: #fff !important;
  margin: 0.2rem 0; /* optional for spacing */
}


.dark-mode .stat-card
{
    background: rgb(186, 186, 196);
    border: 1px solid #444;
    
}

.dark-mode .b2 {
  border-bottom: 1px solid #444;
}


.dark-mode .dashboard-main
{
  background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
}

.dark-mode .profile-card {
    background-color: #2B2B3D !important;
    color: #fff !important;
    border: 1px solid #444;
}

.dark-mode .top-navbar {
  background-color: #1E1E2F !important;
  color: #fff !important;
  border-bottom-color: 1px solid #444;
}


.dark-mode .security-status {
  background-color: #1E1E2F !important;
}

.logout-link {
  color: #ff4c4c !important;
}

.dark-mode .logout-link {
  color: #ff4c4c !important;
}
.logout-link:hover {
  color: #fa1a1a !important;
}

.container-fluid {
  margin: 0;
  padding: 0;
  height: 100vh;
  overflow: hidden;
}

.sidebar-nav {
  padding: 0 !important;
}
.dashboard-main {
    height: 100vh;
    overflow-y: auto; /* Allow scrolling in main content */
    padding: 3rem;
    margin-bottom: 0; /* Remove bottom margin */
}


.full-height-container {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
}
.min-vh-100 {
    min-height: unset !important; /* Remove minimum viewport height */
}

.top-navbar {
    height: auto; /* Let content determine height */
    min-height: unset; /* Remove min-height if set */
}

.dark-mode .sidebar-nav {
  background-color: #1E1E2F !important;
  border-right: 1px solid #444 !important;
}




/* Adjust your buttons if needed */
.btn-primary {
    background-color: #4c62dc;
    border: none;
}
.btn-primary:hover {
    background-color: #3e52b3;
}

.btn-danger {
    background-color: #d9534f;
    border: none;
}
.btn-danger:hover {
    background-color: #c9302c;
}

.btn-info {
    background-color: #5bc0de;
    border: none;
}
.btn-info:hover {
    background-color: #46b8da;
}

.improved-notification-card {
    border: 1px solid rgba(255, 255, 255, 0.15);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

/* Slightly bigger notification setting headings */
.notification-setting .setting-group h6 {
    font-size: 1rem;
    margin-bottom: 0.5rem;
}

/* Better spacing for icons and text */
.setting-group i {
    font-size: 1.2rem;
}

.feature-item {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-bottom: 10px;
}

.payment-method-item {
    background: rgba(255, 255, 255, 0.05);
    padding: 1rem;
    border-radius: 8px;
    margin-bottom: 1rem;
}

.payment-method-item:last-child {
    margin-bottom: 0;
}

.help-item {
    background: rgba(255, 255, 255, 0.05);
    padding: 1.5rem;
    border-radius: 8px;
}

.table {
    color: #fff;
}

.table-dark {
    background-color: transparent;
}

.table-hover tbody tr:hover {
    background-color: rgba(255, 255, 255, 0.05);
}

.accordion-button:not(.collapsed) {
    background-color: #343450;
    color: #fff;
}

.accordion-button::after {
    filter: invert(1);
}

.plan-badge {
    margin-bottom: 1rem;
}

.badge {
    padding: 0.5rem 1rem;
    font-size: 0.9rem;
}

.setting-group:last-child {
    margin-bottom: 0;
}

.notification-setting .form-check {
    margin-bottom: 0.5rem;
}
    .text-muted {
        color: #9A9AB0 !important;
    }

.notification-setting .form-check:last-child {
    margin-bottom: 0;
}
  .dark-select {
    background-color: #2B2B3D;
    color: #fff;
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.dark-select option {
    background-color: #2B2B3D;
    color: #fff;
}

.dark-input {
    background-color: #2B2B3D;
    color: #fff;
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.text-secondary {
    color: #9A9AB0 !important;
}

.notification-setting {
    background: rgba(43, 43, 61, 0.5);
}

.dark-input:focus {
    background-color: #343450;
    color: #fff;
    border-color: #4e54c8;
    box-shadow: 0 0 0 0.25rem rgba(78, 84, 200, 0.25);
}
  .notification-card {
    background: #2B2B3D;
    border-radius: 15px;
    overflow: hidden;
    margin-bottom: 1rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.notification-card .card-header {
    background: rgba(255, 255, 255, 0.05);
    padding: 1rem;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.notification-card .card-header h5 {
    color: #fff;
    margin: 0;
}

.notification-card .card-body {
    padding: 1.5rem;
}

.notification-setting {
    background: rgba(255, 255, 255, 0.05);
    padding: 1rem;
    border-radius: 10px;
}

.channel-card {
    background: rgba(255, 255, 255, 0.05);
    padding: 1.5rem;
    border-radius: 10px;
    text-align: center;
    height: 100%;
    transition: transform 0.3s;
}

.channel-card:hover {
    transform: translateY(-5px);
}

.channel-icon {
    font-size: 2rem;
    color: #4e54c8;
    margin-bottom: 1rem;
}

.form-check-input {
    background-color: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.2);
}

.form-check-input:checked {
    background-color: #4e54c8;
    border-color: #4e54c8;
}




.btn-outline-primary {
    color: #4e54c8;
    border-color: #4e54c8;
}

.btn-outline-primary:hover {
    background-color: #4e54c8;
    color: #fff;
}

.bg-white {
    background-color: #1E1E2F !important; /* Dark background */

}

/* Fix for the main content background */
.d-flex.flex-column.flex-grow-1.min-vh-100 {
    background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
}




.btn-outline-light:hover {
    background-color: #34344A;
}
      .nav-link:hover, .nav-link.active {
        background-color: #2B2B3D;
        color: #FFFFFF;
        border-radius: 4px;
    }
 .security-card {
            background: #2B2B3D;
            border-radius: 15px;
            overflow: hidden;
            margin-bottom: 1rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
          }

          .security-card .card-header {
            background: rgba(255, 255, 255, 0.1);
            padding: 1rem;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
          }

          .security-card .card-header h5 {
            color: #fff;
            margin: 0;
          }

          .security-card .card-body {
            padding: 1.5rem;
          }

          .status-icon {
            background: rgba(255, 255, 255, 0.05);
            width: 100px;
            height: 100px;
            border-radius: 50%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            margin: 0 auto;
          }

          .status-text {
            font-size: 1.2rem;
            font-weight: bold;
            margin-top: 0.5rem;
          }

          .action-item {
            display: flex;
            align-items: start;
            padding: 1rem;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
            margin-bottom: 1rem;
          }

          .action-item i {
            font-size: 2rem;
            margin-right: 1rem;
            color: #4e54c8;
          }

          .action-content {
            flex: 1;
          }

          .action-content h6 {
            color: #fff;
            margin-bottom: 0.5rem;
          }

          .action-content p {
            color: #9A9AB0;
            font-size: 0.9rem;
            margin-bottom: 1rem;
          }

          .setting-item {
            background: rgba(255, 255, 255, 0.05);
            padding: 1.5rem;
            border-radius: 10px;
            text-align: center;
            height: 100%;
          }

          .setting-item i {
            font-size: 2rem;
            color: #4e54c8;
            margin-bottom: 1rem;
          }

          .setting-item h6 {
            color: #fff;
            margin-bottom: 0.5rem;
          }

          .setting-item p {
            color: #9A9AB0;
            font-size: 0.9rem;
            margin-bottom: 1rem;
          }

    /* Karta Account Summary */
.account-summary {
  background: #2B2B3D;
  border: none;
  border-radius: 10px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.15);
  margin-top: 20px;
}

.account-summary .card-header {

  color: #fff;
  font-size: 1.2rem;
  padding: 15px;
  border-bottom: none;
}

/* Sekce pro jednotlivé položky */
.summary-item {
  display: flex;
  align-items: center;
  padding: 10px 0;
  border-bottom: 1px solid rgba(255,255,255,0.2);
}
.summary-item:last-child {
  border-bottom: none;
}

/* Ikony položek */
.summary-icon {
  background: #fff;
  color: #2575fc;
  border-radius: 50%;
  width: 45px;
  height: 45px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.5rem;
  margin-right: 15px;
}

/* Text a informace */
.summary-info h6 {
  color: #fff;
  margin-bottom: 5px;
}
.summary-info p {
  color: #ccc;
}

/* Progress bar */
.progress-custom {
  height: 10px;
  border-radius: 5px;
  background: #444;
  overflow: hidden;
}
.progress-custom .progress-bar {
  background: #fff;
  height: 100%;
  line-height: 8px;
  text-align: center;
  color: #2575fc;
  font-weight: bold;
}

  /* Animace při načtení */
  .fadeIn {
    animation: fadeIn 1s ease-in-out;
  }

    .form-section {
    margin-bottom: 20px;
    padding-bottom: 10px;
    border-bottom: 1px solid #444;
    }

    .section-title {
    font-size: 1rem;
    margin-bottom: 10px;
    color: #ccc;
    text-transform: uppercase;
    letter-spacing: 1px;
    }

  /* Main Content */
  .main-content {
    flex-grow: 1;
    overflow-y: auto;
    background: #1E1E2F;
  }
  .main-header {
    background: linear-gradient(90deg, #4e54c8, #8f94fb);
    padding: 15px 30px;
    color: #fff;
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }
  


  /* Tabs */
  .nav-tabs {
    border-bottom: 2px solid #444;
    margin-bottom: 20px;
  }
  .nav-tabs .nav-link {
    font-weight: 500;
    color: #aaa;
    border: none;
    padding: 10px 15px;
    transition: background 0.3s, color 0.3s;
  }
  .nav-tabs .nav-link.active {
    background: #6a11cb;
    color: #fff;
    border-bottom: 2px solid transparent;
    border-radius: 5px 5px 0 0;
  }

  /* Cards, formuláře, tlačítka, atd. */
  .card {
    background: #3C3C50;
    padding: 20px;
    border-radius: 10px;
    margin-bottom: 20px;
    box-shadow: 0 4px 10px rgba(0,0,0,0.15);
    transition: transform 0.3s;
  }
  .card:hover {
    transform: translateY(-5px);
  }
  .card-header {
    font-size: 1.2rem;
    font-weight: bold;
    margin-bottom: 15px;
    color: #fff;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .btn-icon {
    background: none;
    border: none;
    color: #fff;
    font-size: 1.2rem;
    cursor: pointer;
  }
  .form-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    gap: 15px;
  }
  .form-group {
    display: flex;
    flex-direction: column;
  }
  .form-group label {
    margin-bottom: 5px;
    color: #ccc;
  }
  .form-actions {
    text-align: right;
    margin-top: 15px;
  }

  .secondary-card {
    margin-top: 20px;
  }
  .input-group {
    display: flex;
    align-items: center;
  }
  .input-group-icon {
    color: #fff;
    padding: 10px;
    border-radius: 5px 0 0 5px;
  }
  .account-summary {
    margin-top: 20px;
  }
  .summary-item {
    display: flex;
    align-items: center;
    padding: 10px 0;
    border-bottom: 1px solid rgba(255,255,255,0.1);
  }
  .summary-item:last-child {
    border-bottom: none;
  }
  .summary-icon {
    background: rgba(255,255,255,0.2);
    border-radius: 50%;
    width: 45px;
    height: 45px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 15px;
    font-size: 1.5rem;
    color: #fff;
  }
  .progress-custom {
    height: 8px;
    border-radius: 5px;
    background: #444;
    overflow: hidden;
  }
  .progress-custom .progress-bar {
    background: #4e54c8;
    height: 100%;
    line-height: 8px;
    text-align: center;
    color: #fff;
  }
  .card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 20px;
  }
  /* Dropdown */
  .dropdown-menu {
    border-radius: 10px;
    border: 1px solid rgba(255,255,255,0.1);
    backdrop-filter: blur(8px);
  }
  .dropdown-item {
    padding: 10px 15px;
    transition: background 0.2s, color 0.2s;
  }
  .dropdown-item:hover {
    background-color: #6c757d;
    color: white;
  }
  
      .search-container {
        width: 400px;
      }

      .search-wrapper {
        position: relative;
        display: flex;
        align-items: center;
        background: var(--search-bg);
        border-radius: 8px;
        padding: 0.5rem 1rem;
      }

      .search-input {
        border: none;
        background: transparent;
        padding-left: 30px;
        border: 1px solid rgb(70, 69, 69);
        width: 100%;
        color: var(--text-color);
      }

      .search-icon {
        position: absolute;
        left: 1.6rem;
        
        color: #6b7280;
      }

      .search-filter-btn {
        background: transparent;
        border: none;
        color: #6b7280;
        padding: 0.25rem;
        border-radius: 4px;
      }

      .add-password-btn {
        padding: 0.5rem 1rem;
        border-radius: 8px;
      }

      .notification-btn, .theme-toggle-btn, .help-btn {
        background: transparent;
        border: none;
        padding: 0.5rem;
        border-radius: 8px;
        color: var(--text-color);
        position: relative;
      }

      .notification-btn:hover, .theme-toggle-btn:hover, .help-btn:hover {
        background: var(--btn-hover);
      }

      .notification-badge {
        position: absolute;
        top: -5px;
        right: -5px;
        background: #ef4444;
        color: white;
        border-radius: 50%;
        padding: 0.25rem 0.5rem;
        font-size: 0.75rem;
        min-width: 20px;
        text-align: center;
      }

      .notification-dropdown {
        width: 320px;
        padding: 0.5rem;
        border: 1px solid var(--border-color);
        border-radius: 8px;
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
      }

      .notification-item {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 0.75rem;
        border-radius: 6px;
      }

      .notification-item:hover {
        background: var(--btn-hover);
      }

      .notification-content {
        flex: 1;
      }

      .notification-title {
        margin: 0;
        font-weight: 500;
      }

      .notification-desc {
        margin: 0;
        font-size: 0.875rem;
        color: #6b7280;
      }
      .add-password-btn {
  padding: 0.6rem 1.2rem;
  border-radius: 13px;
  font-weight: 500;
  transition: transform 0.2s ease, background-color 0.2s ease;
}

.add-password-btn:hover {
  transform: scale(1.05);
  background-color: #2563eb;
}
</style>

@code {
    private PasswordDetails userPassword { get; set; } = new PasswordDetails();
    private AccountDetails user { get; set; } = new AccountDetails();
    private Dictionary<int, bool> passwordVisibility = new Dictionary<int, bool>(); 
    private List<PasswordDetails> weakPasswords = new List<PasswordDetails>();
    private List<PasswordDetails> outDatedPasswords = new List<PasswordDetails>();
    private bool Is2FAEnabled = false;
    private bool isAuthenticated;
    private string? oldPassword;
    private string? newPassword;
    private bool isEditing = false;
    private bool PasswordChangeSuccess;
    private DateTime dateOfPassword;
    private bool HasPasswordBeenChangedThisMonth;
    private bool WantToEdit = false;
    private int notifications = 0;
    private string encryptionKeyBase64;
    private string decryptedPassword;
    private string plainPassword;
    private bool isDarkMode = false;
    private int AccountPoints = 0;

    private async Task ProfileCompletion(int id)
    {
      var client = HttpClientFactory.CreateClient("ApiClient");
      var response = await client.PutAsJsonAsync($"api/AccountDetails/{id}/UpdateProfileCompletion", user);
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Success: {result}");
            Console.WriteLine(user.AccountPoints);
        }
        else
        {
            var error = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Error: {response.StatusCode} - {error}");
        }
    }

    private void ToggleTheme()
    {
        isDarkMode = !isDarkMode;
    }


    private void EditPersonalInfo()
    {
        
        WantToEdit = !WantToEdit;
        StateHasChanged(); 
        
    }

    private void EditUser()
    {
        isEditing = true;
    }

    private void CancelEdit()
    {
        isEditing = false;
    }

    private async Task HandleEdit()
    {
        await SaveUserAsync(user);
        isEditing = false;
    }

    private Task SaveUserAsync(AccountDetails user)
    {
        return Task.CompletedTask;
    }


        private async Task SaveUserEdit()
    {
        user.DateOfBirth = user.DateOfBirth.Date;
        var client = HttpClientFactory.CreateClient("ApiClient");
        var response = await client.PutAsJsonAsync($"api/AccountDetails/{user.Id}", user);
        if (response.IsSuccessStatusCode)
        {
            await LoadUserData();
            isEditing = false;
        }
        else
        {
            Console.WriteLine($"Failed to save user edit. Status Code: {response.StatusCode}");
        }
    }

    private async Task LoadUserData()
    {
        var client = HttpClientFactory.CreateClient("ApiClient");
        user = await client.GetFromJsonAsync<AccountDetails>($"api/AccountDetails/{user.Id}");
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var currentUser = authState.User;
            var isAuthenticated = currentUser.Identity.IsAuthenticated;
            Console.WriteLine($"Is user authenticated: {isAuthenticated}");


            isAuthenticated = currentUser.Identity.IsAuthenticated;

            if (isAuthenticated)
            {
                var userIdClaim = currentUser.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value;

                if (!string.IsNullOrEmpty(userIdClaim))
                {
                    var httpClient = HttpClientFactory.CreateClient("ApiClient");
                    var url = $"api/UserDetails/{userIdClaim}";
                    Console.WriteLine($"Requesting URL: {url}");

                    var result = await httpClient.GetFromJsonAsync<AccountDetails>(url);

                    if (result != null)
                    {
                        user = result;
                        Console.WriteLine("User data loaded successfully.");
                    }
                    else
                    {
                        Console.WriteLine("User not found or API returned null.");
                    }
                }
                else
                {
                    Console.WriteLine("UserId claim is missing.");
                }

            }
            else
            {
                Console.WriteLine("User is not authenticated.");
            }
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"HttpRequestException: {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Exception: {ex.Message}");
        }

        await ProfileCompletion(user.Id);
    }

    private async Task ChangePassword()
    {
        if (HasPasswordBeenChangedThisMonth)
        {
            var result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Error",
                Text = "You can change your password only once per month.",
                Icon = SweetAlertIcon.Error,
                ConfirmButtonText = "OK",
                Timer = 5000
            });
            return;
        }

        // Přidána kontrola, zda je staré heslo vyplněno
        if (string.IsNullOrEmpty(oldPassword))
        {
            var result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Error",
                Text = "Old password is required.",
                Icon = SweetAlertIcon.Error,
                ConfirmButtonText = "OK",
                Timer = 5000
            });
            return;
        }

        var changePasswordDto = new ChangePasswordDto
        {
            OldPassword = oldPassword,
            NewPassword = newPassword,
            DateOfChange = dateOfPassword,
            HasBeenChangedThisMonth = HasPasswordBeenChangedThisMonth
        };

        var response = await HttpClientFactory.CreateClient("ApiClient")
            .PutAsJsonAsync($"api/AccountDetails/{user.Id}/change-password", changePasswordDto);

        if (response.IsSuccessStatusCode)
        {
            var result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmation",
                Text = "Your password has been changed successfully.",
                Icon = SweetAlertIcon.Success,
                ConfirmButtonText = "OK",
                Timer = 5000
            });
            PasswordChangeSuccess = true;
            oldPassword = string.Empty;
            newPassword = string.Empty;
            StateHasChanged();
        }
        else
        {
            var errorResponse = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Error: {errorResponse}");

            var result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Error",
                Text = $"Incorrect password. Please try again. {errorResponse}",
                Icon = SweetAlertIcon.Error,
                ConfirmButtonText = "OK",
                Timer = 5000
            });
            PasswordChangeSuccess = false;
        }
    }


    private async Task GenerateCustomerId()
    {
            try
        {
            var client = HttpClientFactory.CreateClient("ApiClient");
            var response = await client.PostAsJsonAsync("api/AccountDetails", user);

            if (response.IsSuccessStatusCode)
            {
                var createdUser = await response.Content.ReadFromJsonAsync<AccountDetails>(); // Získání vytvořeného uživatele včetně CustomerId
                user = createdUser; // Aktualizace uživatelského modelu
                await JSRuntime.InvokeVoidAsync("alert", "Customer created successfully.");
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                await JSRuntime.InvokeVoidAsync("alert", $"Error: {errorMessage}");
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Exception: {ex.Message}");
        }
    } 

    private async Task GenerateAccountId()
    {
        try
        {
            var client = HttpClientFactory.CreateClient("ApiClient");
            var response = await client.PostAsJsonAsync("api/AccountDetails", user);

            if (response.IsSuccessStatusCode)
            {
                var createdUser = await response.Content.ReadFromJsonAsync<AccountDetails>(); // Získání vytvořeného uživatele včetně CustomerId
                user = createdUser; // Aktualizace uživatelského modelu
                await JSRuntime.InvokeVoidAsync("alert", "Account Id created successfully.");
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                await JSRuntime.InvokeVoidAsync("alert", $"Error: {errorMessage}");
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Exception: {ex.Message}");
        }
    }
    private void TimeChecker()
    {
        
    }

    private async Task EditUserInfo()
    {
        var httpClient = HttpClientFactory.CreateClient("ApiClient");
        var response = await httpClient.PutAsync($"api/AccountDetails/{user.Id}", new StringContent(JsonSerializer.Serialize(user), Encoding.UTF8, "application/json"));

        if (response.IsSuccessStatusCode)
        {
            await LoadUserData(); 
            WantToEdit = false; 
            StateHasChanged();
        }
        else
        {
           
        }
    }

    private async Task Disable2FA()
    {
        user.TwoFactorEnabled = false;  

        var httpClient = HttpClientFactory.CreateClient("ApiClient");
        var response = await httpClient.PutAsync($"api/AccountDetails/{user.Id}", 
            new StringContent(JsonSerializer.Serialize(user), Encoding.UTF8, "application/json"));

        if (response.IsSuccessStatusCode)
        {
            await LoadUserData();
            StateHasChanged();
        }
        else
        {
            Console.WriteLine($"Error: {response.ReasonPhrase}");
        }
    }

       private bool IsPasswordVisible(int userId)
    {
        return passwordVisibility.ContainsKey(userId) && passwordVisibility[userId];
    }

    private void TogglePasswordVisibility(int userId)
    {
        if (passwordVisibility.ContainsKey(userId))
        {
            passwordVisibility[userId] = !passwordVisibility[userId];
        }
        else
        {
            passwordVisibility[userId] = true;
        }
    }
}
