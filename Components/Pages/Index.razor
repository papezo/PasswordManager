@page "/"


@using System.Security.Claims
@using Microsoft.AspNetCore.Antiforgery
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.Components.Authorization
@using WebApp.Data
@using WebApp.Models
@using System.Net.Http
@using System.Net.Http.Json

@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager
@inject ApplicationDbContext appDbContext
@inject IAntiforgery Antiforgery
@inject IHttpContextAccessor HttpContextAccessor
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Login Page</PageTitle>


<!-- Bootstrap Icons -->

<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
    <symbol id="check-circle-fill" fill="currentColor" viewBox="0 0 16 16">
        <path
            d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
    </symbol>
    <symbol id="info-fill" fill="currentColor" viewBox="0 0 16 16">
        <path
            d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z" />
    </symbol>
    <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
        <path
            d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
    </symbol>
</svg>




<body>
    <div class="d-flex vh-100">
        <!-- Sign In Form -->
        <div class="d-flex justify-content-center align-items-center vh-100 text-white" style="width: 100%;">
            <div class="col-md-6 col-lg-4">
                <div class="card bg-light text-dark shadow-lg rounded-4 p-4">
                    <h1 class="card-title text-center mb-4">Sign In</h1>
                    <p class="text-center mb-5">New to Password Manager? <a href="/CreateAccount" class="link-primary text-decoration-none">Create an Account</a></p>

                    <!-- Error Message -->
                    @if (!string.IsNullOrEmpty(message))
                    {
                        <div class="alert alert-danger d-flex align-items-center" role="alert">
                            <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:">
                                <use xlink:href="#exclamation-triangle-fill" />
                            </svg>
                            <div>@message</div>
                        </div>
                    }

                    <EditForm Model="@user" OnValidSubmit="Authenticate" FormName="Login">
                        <div class="text-center mb-4">
                            <label for="email" class="form-label fw-bold mb-3">Username</label>
                            <div class="input-group w-50 mx-auto">
                                <span class="input-group-text"><i class="bi bi-person"></i></span>
                                <InputText id="email" @bind-Value="user.Username" class="form-control" placeholder="Username" />
                            </div>
                        </div>

                        <div class="text-center mb-4">
                            <label for="password" class="form-label fw-bold mb-3">Password</label>
                            <div class="input-group w-50 mx-auto">
                                <span class="input-group-text"><i class="bi bi-lock"></i></span>
                                <InputText id="password" @bind-Value="user.Password" class="form-control" placeholder="Password" type="password" />
                            </div>
                        </div>

                        <div class="text-center mb-4 mt-5">
                            <button type="submit" class="btn btn-primary w-25">Sign In</button>
                        </div>

                        <div class="text-center d-flex align-items-center justify-content-center mt-4">
                            <div class="form-check d-flex align-items-center">
                                <InputCheckbox id="rememberMe" @bind-Value="user.rememberMe" class="form-check-input" />
                                <label class="form-check-label ms-2 me-5" for="rememberMe">
                                    Remember Me
                                </label>
                            </div>
                            <p class="mb-0 ms-3">
                                <a href="/ForgotPassword" class="link-primary text-decoration-none">Forgot Password?</a>
                            </p>
                        </div>
                    </EditForm>
                        <div class="text-center my-4">
                            <div class="divider-text">Or sign in with</div>
                        </div>

                        <div class="d-flex align-items-center justify-content-center text-center">
                            <button type="button" class="btn btn-outline-dark me-2 w-50 p-1">
                            <img src="/images/google2.png" alt="Google Logo" width="40" height="40" class="me-2">

                                Sign up with Google
                            </button>
                        </div>
                </div>
            </div>
        </div>    
        </div>

</body>
<style>
        body {
             background: #bdc3c7;  /* fallback for old browsers */
            background: -webkit-linear-gradient(to right, #2c3e50, #747779);  /* Chrome 10-25, Safari 5.1-6 */
            background: linear-gradient(to right, #2c3e50, #bdc3c7); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
        }
        .divider-text {
            position: relative;
            text-align: center;
            color: #6c757d;
            margin: 1.5rem 0;
        }
        .divider-text::before, .divider-text::after {
            content: "";
            position: absolute;
            top: 50%;
            width: 40%;
            border-bottom: 1px solid #6c757d;
            transform: translateY(-50%);
        }
        .divider-text::before {
            left: 0;
        }
        .divider-text::after {
            right: 0;
        }
    </style>


@code {

    [CascadingParameter]
    public HttpContext? HttpContext{get; set;}

    [SupplyParameterFromForm]
    private LoginDetails user { get; set; } = new LoginDetails();
    private string message { get; set; } = string.Empty;
    private string messageType { get; set; } = "success"; // Default to success

    private async Task Authenticate()
{
    var userAccount = appDbContext.AccountDetails
                      .Where(x => x.Username == user.Username && x.Password == user.Password)
                      .FirstOrDefault();

    if(userAccount is null || userAccount.Password != user.Password)
    {
        message = "Wrong username or password.";
        messageType = "danger";
        return;
    }

    var claims = new List<Claim>
    {
        new Claim(ClaimTypes.NameIdentifier, userAccount.Id.ToString()), 
        new Claim(ClaimTypes.Name, userAccount.Username),
    };

    var identity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
    var principal = new ClaimsPrincipal(identity);

    await HttpContext.SignInAsync(CookieAuthenticationDefaults.AuthenticationScheme, principal);
    NavigationManager.NavigateTo("/HomeManager");
}

}