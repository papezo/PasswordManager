@page "/"
@using WebApp.Models
@using System.Net.Http
@using System.Net.Http.Json
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager

<PageTitle>Login Page</PageTitle>


<!-- Bootstrap Icons -->

<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
    <symbol id="check-circle-fill" fill="currentColor" viewBox="0 0 16 16">
        <path
            d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
    </symbol>
    <symbol id="info-fill" fill="currentColor" viewBox="0 0 16 16">
        <path
            d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z" />
    </symbol>
    <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
        <path
            d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
    </symbol>
</svg>




<div class="d-flex justify-content-center align-items-center vh-100 bg-dark text-white">
    <EditForm Model="@user" OnValidSubmit="HandleLogin" class="text-center w-25" FormName="loginForm">
        <h1 class="mb-5">Sign In</h1>

        @if (!string.IsNullOrEmpty(message))
        {
            <div class="alert alert-danger d-flex align-items-center" role="alert">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:">
                    <use xlink:href="#exclamation-triangle-fill" />
                </svg>
                <div>@message</div>
            </div>
        }

        <div class="mb-4 w-75 mx-auto">
            <label for="email" class="form-label">Username</label>
            <InputText id="email" @bind-Value="user.Username" class="form-control" placeholder="Username" />

            <div id="forgotEmail" class="mt-2">
                <a class="link-primary link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover">Forgot
                    Your Username?</a>
            </div>
        </div>

        <div class="mb-4 w-75 mx-auto">
            <label for="password" class="form-label">Password</label>
            <InputText id="password" @bind-Value="user.Password" class="form-control" placeholder="Password"
                type="password" />

            <div id="emailHelp" class="mt-2">
                <a class="link-primary link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover">Forgot
                    Your Password?</a>
            </div>
        </div>

        <button type="submit" class="btn btn-primary">Sign In</button>
        <p class="mt-4">New To Password Manager? <a href="/CreateAccount"
                class="link-primary link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover">Create An
                Account</a></p>
    </EditForm>
</div>

@code {
    [SupplyParameterFromForm]
    private LoginDetails user { get; set; } = new LoginDetails();
    private string message { get; set; } = string.Empty;
    private string messageType { get; set; } = "success"; // Default to success

    private async Task HandleLogin()
    {
        Console.WriteLine($"Sending login request: Username={user.Username}, Password={user.Password}");

        var httpClient = HttpClientFactory.CreateClient("ApiClient");
        var response = await httpClient.PostAsJsonAsync("api/AccountDetails/authenticate", user);

        if (response.IsSuccessStatusCode)
        {
            await Task.Delay(3000);
            NavigationManager.NavigateTo("/HomeManager");
        }
        else
        {
            message = "Invalid login attempt.";
            messageType = "danger";
        }
    }
}
